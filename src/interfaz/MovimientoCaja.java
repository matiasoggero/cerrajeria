/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;
import java.sql.*;
import java.util.Date;
import conexion.Conectar;
import java.awt.Image;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

public class MovimientoCaja extends javax.swing.JFrame {

    String user,cliente;
    int stock;
    public MovimientoCaja() {
        initComponents();
        user = Login.user;
        cliente = NuevoRegistroCaja.cliente_caja;
        txt_cliente.setText(cliente);
        setSize(600,400);
        setTitle("movimiento de caja - sesion de " + user);
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        
        ImageIcon wallpaper = new ImageIcon("src/imagenes/wallpaperPrincipal.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel_Wallpaper.getWidth(), jLabel_Wallpaper.getHeight(), Image.SCALE_DEFAULT));
        jLabel_Wallpaper.setIcon(icono);
        this.repaint();
        
        try {
            Connection cn = Conectar.DataBase();
            PreparedStatement pst = cn.prepareStatement(
                    "SELECT caja_total FROM `caja` WHERE op IN(SELECT MAX(op)FROM caja)");
            ResultSet rs = pst.executeQuery();
            
            if(rs.next()){
                stock = rs.getInt("caja_total");
                
            }
            
        } catch (SQLException e) {
            System.err.println("error al extraer el ultimo valor de caja " + e);
        }
        
    }
    
    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/LLaves.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_cliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_importe = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_concepto = new javax.swing.JTextArea();
        btn_salida = new javax.swing.JButton();
        btn_ingreso = new javax.swing.JButton();
        jLabel_Wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cliente:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        txt_cliente.setEditable(false);
        txt_cliente.setBackground(new java.awt.Color(13, 71, 161));
        txt_cliente.setForeground(new java.awt.Color(255, 255, 255));
        txt_cliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_cliente.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 210, 30));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Importe:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        txt_importe.setBackground(new java.awt.Color(13, 71, 161));
        txt_importe.setForeground(new java.awt.Color(255, 255, 255));
        txt_importe.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_importe.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_importe, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 210, 30));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Concepto:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, -1));

        txt_concepto.setColumns(20);
        txt_concepto.setRows(5);
        jScrollPane1.setViewportView(txt_concepto);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 210, 140));

        btn_salida.setBackground(new java.awt.Color(0, 51, 204));
        btn_salida.setForeground(new java.awt.Color(255, 255, 255));
        btn_salida.setText("Salida");
        btn_salida.setBorder(null);
        btn_salida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salidaActionPerformed(evt);
            }
        });
        getContentPane().add(btn_salida, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 210, 30));

        btn_ingreso.setBackground(new java.awt.Color(0, 51, 204));
        btn_ingreso.setForeground(new java.awt.Color(255, 255, 255));
        btn_ingreso.setText("Ingreso");
        btn_ingreso.setBorder(null);
        btn_ingreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ingresoActionPerformed(evt);
            }
        });
        getContentPane().add(btn_ingreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 270, 210, 30));
        getContentPane().add(jLabel_Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_salidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salidaActionPerformed
        String cliente, concepto, importe_st;
        int validacion =0, importe =0, stock_actual =0;
        Date fecha = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String fechaSQL = sdf.format(fecha);
        
        
        cliente = txt_cliente.getText().trim();
        concepto = txt_concepto.getText().trim();
        importe_st = txt_importe.getText().trim();
        
        if(concepto.equals("")){
            validacion++;
        }
        if(importe_st.equals("")){
            validacion++;
        }
        
        if (validacion == 0) {
            importe = Integer.parseInt(importe_st);
            stock_actual = stock - importe;
            
            
            try {
                Connection cn = Conectar.DataBase();
            PreparedStatement pst = cn.prepareStatement(
                    "insert into caja values(?,?,?,?,?,?,?)");
            
            pst.setInt(1, 0);
            pst.setString(2, fechaSQL);
            pst.setString(3, concepto);
            pst.setString(4, cliente);
            pst.setInt(5, importe);
            pst.setInt(6, stock_actual);
            pst.setString(7, user);
            
            pst.executeUpdate();
            cn.close();
            JOptionPane.showMessageDialog(null, "LA SALIDA FUE REGISTRADA CON EXITO.");
            this.dispose();
            
            } catch (Exception e) {
                System.err.println("error al insertar nueva op en caja " + e);
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "debes completar todos los campos.");
        }
        
    }//GEN-LAST:event_btn_salidaActionPerformed

    private void btn_ingresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ingresoActionPerformed
        String cliente, concepto, importe_st;
        int validacion =0, importe =0, stock_actual =0;
        Date fecha = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String fechaSQL = sdf.format(fecha);
        
        
        cliente = txt_cliente.getText().trim();
        concepto = txt_concepto.getText().trim();
        importe_st = txt_importe.getText().trim();
        
        if(concepto.equals("")){
            txt_concepto.setText("servicio de cerrajeria");
        }
        if(importe_st.equals("")){
            validacion++;
        }
        
        if (validacion == 0) {
            importe = Integer.parseInt(importe_st);
            stock_actual = stock + importe;
            
            
            try {
                Connection cn = Conectar.DataBase();
            PreparedStatement pst = cn.prepareStatement(
                    "insert into caja values(?,?,?,?,?,?,?)");
            
            pst.setInt(1, 0);
            pst.setString(2, fechaSQL);
            pst.setString(3, concepto);
            pst.setString(4, cliente);
            pst.setInt(5, importe);
            pst.setInt(6, stock_actual);
            pst.setString(7, user);
            
            pst.executeUpdate();
            cn.close();
            JOptionPane.showMessageDialog(null, "EL INGRESO FUE REGISTRADO CON EXITO.");
            this.dispose();
            
            } catch (Exception e) {
                System.err.println("error al insertar nueva op en caja " + e);
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "debes completar todos los campos.");
        }
    }//GEN-LAST:event_btn_ingresoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovimientoCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovimientoCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovimientoCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovimientoCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovimientoCaja().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_ingreso;
    private javax.swing.JButton btn_salida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_Wallpaper;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_cliente;
    private javax.swing.JTextArea txt_concepto;
    private javax.swing.JTextField txt_importe;
    // End of variables declaration//GEN-END:variables
}
